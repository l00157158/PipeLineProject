name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Build with Maven
      run: mvn clean package
      working-directory: ./prj

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Test with Maven
      run: mvn test
      working-directory: ./prj

  docker_push:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/myapp01:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/myapp01:latest
      working-directory: ./prj

  deploy_to_ec2:
    needs: docker_push
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/myapp01:latest
          docker stop app-container || true
          docker rm app-container || true
          docker run -d --name app-container --rm -p 80:8080 ${{ secrets.DOCKER_USERNAME }}/myapp01:latest

  postman_test:
    needs: deploy_to_ec2
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Run Postman Tests
      run: newman run prj/PipeLine-Prj.postman_collection.json
